0.3.0:

- FEATURES/IMPROVEMENTS:

 - Added custom memory allocator resulting in about 15% speedup and about 45% 
   decrease of memory usage.

 - Added benchmarking code and multiple scripts related to benchmarking.
   This is mainly usable for debugging/development and isn't very well
   documented. These scripts require python and valgrind to work.

 - Added asserts to the code to check for obvious errors in code.

- BUGFIXES: 

 - Fixed a few small bugs.


0.4.0:

- FEATURES/IMPROVEMENTS:

 - Implemented sorting of INISection and INIFile data along with binary search
   resulting in about 20% speedup on average, and much faster reading of large
   files.
 
 - Bools are now parsed as true if a value starts by t,T,y,Y or 1 and false if 
   it starts by f,F,n,N or 0. 
   In the past, bools were parsed as true if value was "true", "yes" or "1" and
   false if it is "false", "no" or "0".
 
 - Added INISection and INIFile methods taking STL strings and vectors as 
   arguments. STL support can be disabled by "make no-stl" combined with 
   a definition of macro INI_NO_STL before including MiniINI header.

 - Added support for loading INIFiles from user provided buffer instead from
   file directly. This allows the user to load files e.g. from archives.

 - Logging is now disabled by default. User must provide a callback using
   INILogCallback to enable logging (logging still works only in debug build)

 - Empty ini sections or files are not ignored anymore, although they issue a
   warning if found. (if logging callback is provided)

 - Improved benchmark and regression tester and updated them according to new
   functionality.

 - Improved benchmarking scripts: it is now possible to provide an inifile 
   defining benchmarks and inputs to use, merge data from these benchmarks
   and compare such merged data from multiple runs.

- BUGFIXES: 

 - Fixed the logging macro bug that made compilation impossible.

 - Fixed various bugs in API documentation.

 - Fixed a bug in example where <iostream> was not included even though it was
   needed.

 - Fixed a few small bugs.


0.5.0:

- FEATURES/IMPROVEMENTS:
 
 - Refactored ini file reading.

 - Refactored array reading.

 - INIFile::LoadBuffer() no longer alters contents of passed buffer.

 - Optimized some code, resulting in about 15% speedup on average, 25% speedup
   for array reading.

- BUGFIXES:
 
 - Fixed a bug in testgen.py that caused problems with array reading benchmarks.

 - Fixed a few small bugs.


0.6.0:

- FEATURES/IMPROVEMENTS:
 
 - The name=value separator is now configurable (stays '=' by default) using
   the INISetSeparator() function. This also resulted in about 2% slowdown.

 - All tags before the first header are now loaded to the "[DEFAULT]" section
   (actual section name includes the '[' and ']' to make sure that it won't 
   conflict with any sections in any ini file.

 - Array reallocation was refactored, resulting in cleaner code and negligible
   slowdown.

 - Added a test for reading very long tags to tester.

 - INISetComment() and INISetSeparator() now both refuse characters already used
   in INI files (such as '[') and return success/failure bool.

 - Makefile now uses $DESTDIR to specify where to install.

 - Ascii docs are now generated as xhtml instead of html4.

 - Style of API docs was modified.

- BUGFIXES:

 - Fixed the bug in INIFile::LoadBuffer() that would delete the passed buffer.

 - Many minor bugfixes.


0.7.0:

- FEATURES/IMPROVEMENTS:

 - Tags with multiple values now supported, can be read with the new 
   ReadMultiXXX family of INISection methods. ',' is parsed as a separator 
   between multiple values. If ReadXXX methods are called on a multi-value tag, 
   the first value is read.

 - Added an array lookup operator to INISection for fast access to string 
   values.
 
 - Wrote a set of tutorials describing all features of MiniINI.

 - Removed the STL version of INISection::ArraySize since it was redunant.
 
 - Better warnings

 - Various improvements in the API documentation

 - Modified internal format of ini tag storage to allow for multi value tags.

 - Refactored parsing of arrays of data.

 - Regression tester program now returns -1 if any test fails.

 - Moved to txt2tags instead of asciidoc for tutorials and README.
 
- BUGFIXES:

 - Fixed an allocator bug that caused a segfault when allocating a new block.

 - Many minor bugfixes.

0.7.1

- BUGFIXES:

 - Removed the broken INISection operator [].
